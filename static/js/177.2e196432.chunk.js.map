{"version":3,"file":"static/js/177.2e196432.chunk.js","mappings":"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","sources":["components/FormaReact/LoginReactForma.jsx","components/LoginForm/LoginForm.jsx","Pages/Login/Login.jsx","webpack://react-homework-template/./src/components/Button/button.module.css?6dda","components/Button/Button.jsx","components/FormaReact/InputField.jsx","components/FormaReact/Input.jsx","webpack://react-homework-template/./src/components/PetBlock/petBlock.module.css?26e0","components/PetBlock/PetBlock.jsx","schemas/schemas.js","webpack://react-homework-template/./src/components/FormaReact/formaReactReg.module.css?c1f4","webpack://react-homework-template/./src/components/RegisterForm/registerForm.module.css?0fd0"],"sourcesContent":["import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Formik, Form } from 'formik';\nimport * as schema from '../../schemas/schemas';\nimport Input from './Input';\nimport Button from 'components/Button/Button';\nimport { loginThunk } from '../../redux/auth/operationsAuth';\nimport styles from './formaReactReg.module.css';\n\nconst LoginReactForma = () => {\n  const dispatch = useDispatch();\n  return (\n    <Formik\n      initialValues={{\n        email: '',\n        password: '',\n      }}\n      validationSchema={schema.loginSchema}\n      onSubmit={(values, { resetForm }) => {\n        dispatch(loginThunk(values));\n\n        resetForm();\n      }}\n    >\n      <Form className={styles.form}>\n        <Input name=\"email\" placeholder=\"Email\" type=\"email\" />\n        <Input name=\"password\" placeholder=\"Password\" type=\"password\" />\n        <div className={styles.btnLog}>\n          <Button style={{textTransform: 'uppercase'}}>Log In</Button>\n        </div>\n      </Form>\n    </Formik>\n  );\n};\n\nexport default LoginReactForma;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport PetBlock from 'components/PetBlock/PetBlock';\nimport LoginReactForma from 'components/FormaReact/LoginReactForma';\nimport Dog1M from '../../assets/img/dog1M.png';\nimport Dog1D from '../../assets/img/dog1D.png';\nimport Dog1P from '../../assets/img/dogLog1P .png';\nimport Dog2D from '../../assets/img/dog2D.png';\nimport Dog2M from '../../assets/img/dog2M.png';\nimport Dog2P from '../../assets/img/dogLog2P.png';\nimport styles from '../RegisterForm/registerForm.module.css';\n\nconst LoginForm = () => {\n  return (\n    <div className={styles.wrap}>\n      <PetBlock\n        mobileImage1x={Dog1M}\n        mobileImage2x={Dog2M}\n        tabletImage1x={Dog1P}\n        tabletImage2x={Dog2P}\n        desktopImage1x={Dog1D}\n        desktopImage2x={Dog2D}\n      />\n      <div className={styles.wrapForma}>\n        <h3 className={styles.titleLog}>Log in</h3>\n        <p className={styles.text}>\n          Welcome! Please enter your credentials to login to the platform:\n        </p>\n        <LoginReactForma />\n        <div className={styles.linkWrapLog}>\n          <p className={styles.linkText}>Donâ€™t have an account?</p>\n          <NavLink className={styles.link} to=\"/register\">\n            Register\n          </NavLink>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default LoginForm;\n","import LoginForm from 'components/LoginForm/LoginForm'\nimport React from 'react'\n\nconst Login = () => {\n  return (\n    <div><LoginForm/></div>\n  )\n}\n\nexport default Login","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"button_btn__HeAxz\"};","import React from 'react';\nimport styles from './button.module.css';\n\n const Button = ({ type = 'submit', children, onClick, style}) => {\n  return (\n    <button className={styles.btn} type={type} onClick={onClick} style={style}> \n      {children}\n    </button>\n  );\n};\nexport default Button","import React, { useState } from 'react';\nimport Icon from 'components/Icon/Icon';\nimport styles from './formaReactReg.module.css';\n\nconst InputField = ({ field, form, ...props }) => {\n  const error = form.errors[field.name] && form.touched[field.name];\n  const success = !form.errors[field.name] && form.touched[field.name];\n  const [visible, setVisible] = useState(false);\n\n  return (\n    <div className={styles.inputWrap}>\n      <label>\n        <input\n          {...field}\n          {...props}\n          type={props.type === 'password' && (visible ? 'text' : 'password')}\n          style={{\n            borderColor: error\n              ? '#ef2447'\n              : success\n              ? '#08aa83'\n              : 'rgba(38, 38, 38, 0.15)',\n          }}\n        />\n        <div\n          className={styles.btnEyeWrap}\n          style={{\n            transform: props.type === 'password' && 'translate(-20%, 50%)',\n          }}\n        >\n          <button className={styles.btnEye}>\n            {error && <Icon width={18} height={18} name={'icon-cross-small'} />}\n            {success && <Icon width={18} height={18} name={'icon-green'} />}\n          </button>\n          {props.type === 'password' && (\n            <button\n              type=\"button\"\n              className={styles.btnEye}\n              onClick={() => {\n                setVisible(!visible);\n              }}\n            >\n              <Icon width={20} height={20} name={'icon-eye-off'} />\n            </button>\n          )}\n        </div>\n        {success && props.placeholder === 'Password' && (\n          <span style={{ color: '#08aa83' }}>Password is secure</span>\n        )}\n      </label>\n    </div>\n  );\n}\n\nexport default InputField;\n","import React from 'react';\nimport { Field, ErrorMessage } from 'formik';\nimport InputField from './InputField'\nimport styles from './formaReactReg.module.css';\n\n\nconst Input = ({ name, placeholder,type}) => {\n  \n  return (\n    <div className={styles.inputWrap}>\n      <label>\n        <Field name={name} placeholder={placeholder} type={type} component={InputField} />\n        <ErrorMessage name={name}>{error => <span>{error}</span>}</ErrorMessage>\n      </label>\n    </div>\n  );\n};\n\nexport default Input;\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapImg\":\"petBlock_wrapImg__iGesq\",\"img\":\"petBlock_img__pTzeP\"};","import React from 'react';\nimport styles from './petBlock.module.css';\n\nconst PetBlock = ({\n  mobileImage1x,\n  mobileImage2x,\n  tabletImage1x,\n  tabletImage2x,\n  desktopImage1x,\n  desktopImage2x,\n}) => {\n  return (\n    <div className={styles.wrapImg}>\n      <picture className={styles.img}>\n        <source\n         media=\"(max-width: 767px)\"\n          srcSet={`${mobileImage1x} 1x, ${mobileImage2x} 2x`}\n        />\n        <source\n           media=\"(min-width: 768px) and (max-width: 1279px)\"\n          srcSet={`${tabletImage1x} 1x, ${tabletImage2x} 2x`}\n        />\n        <source\n          media=\"(min-width: 1280px)\"\n          srcSet={`${desktopImage1x} 1x, ${desktopImage2x} 2x`}\n        />\n        <img src={desktopImage1x} alt=\"pet\" />\n      </picture>\n    </div>\n  );\n};\n\nexport default PetBlock;\n","import * as yup from 'yup';\n\nexport const registerSchema = yup.object().shape({\n  name: yup.string().required('Name is required'),\n\n  email: yup\n    .string()\n    .matches(\n      /^[\\w-]+(\\.[\\w-]+)*@([\\w-]+\\.)+[a-zA-Z]{2,7}$/,\n      'Enter a valid Email'\n    )\n    .required('Email is required'),\n\n  password: yup\n    .string()\n    .min(7, 'Password must be at least 7 characters')\n    .required('Password is required'),\n\n  confirmpassword: yup\n    .string()\n    .oneOf([yup.ref('password'), null], 'Passwords must match')\n    .required('Confirm password is required'),\n});\n\nexport const loginSchema = yup.object().shape({\n  email: yup\n    .string()\n    .matches(\n      /^[\\w-]+(\\.[\\w-]+)*@([\\w-]+\\.)+[a-zA-Z]{2,7}$/,\n      'Enter a valid Email'\n    )\n    .required('Email is required'),\n\n  password: yup\n    .string()\n    .min(7, 'Password must be at least 7 characters')\n    .required('Password is required'),\n});\n\nexport const addPetSchema = yup.object().shape({\n  title: yup\n    .string()\n    .required('Title is required'),\n\n  name: yup\n    .string()\n    .required('Name is required'),\n\n    imgUrl: yup\n    .string()\n    .matches(\n      /^https?:\\/\\/.*\\.(?:png|jpg|jpeg|gif|bmp|webp)$/,\n      'Enter a valid imgUrl'\n    )\n    .required('imgUrl is required'),\n\n    species: yup\n    .object()\n    .required('Species is required'),\n\n    birthday: yup\n    .string()\n    .matches( /^\\d{4}-\\d{2}-\\d{2}$/,'Enter a valid Birthday')\n    .required('Birthday is required'),\n\n    sex: yup\n    .string()\n    .required('Pet gender is required'),\n});\n\nexport const editUserSchema = yup.object().shape({\n  name: yup.string(),\n\n  email: yup\n    .string()\n    .matches(\n      /^[\\w-]+(\\.[\\w-]+)*@([\\w-]+\\.)+[a-zA-Z]{2,7}$/,\n      'Enter a valid Email'),\n\n    imgUrl: yup\n    .string()\n    .matches(\n      /^https?:\\/\\/.*\\.(?:png|jpg|jpeg|gif|bmp|webp)$/,\n      'Enter a valid imgUrl'),\n\n   phone: yup\n    .string()\n    .matches(\n      /^\\+38\\d{10}$/,\n      'Enter a valid Phone')\n});\n\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"formaReactReg_form__UEHkA\",\"inputWrap\":\"formaReactReg_inputWrap__EasdP\",\"btn\":\"formaReactReg_btn__06TDj\",\"btnLog\":\"formaReactReg_btnLog__m8bab\",\"btnEyeWrap\":\"formaReactReg_btnEyeWrap__iGYDH\",\"btnEye\":\"formaReactReg_btnEye__fZiQ1\"};","// extracted by mini-css-extract-plugin\nexport default {\"wrap\":\"registerForm_wrap__HOmjm\",\"wrapForma\":\"registerForm_wrapForma__VG4eS\",\"title\":\"registerForm_title__IlNIl\",\"titleLog\":\"registerForm_titleLog__tMloT\",\"text\":\"registerForm_text__E1GKU\",\"linkWrap\":\"registerForm_linkWrap__gtTsZ\",\"linkWrapLog\":\"registerForm_linkWrapLog__lxRxR\",\"linkText\":\"registerForm_linkText__se5gg\",\"link\":\"registerForm_link__tBPB3\"};"],"names":["dispatch","useDispatch","_jsx","Formik","initialValues","email","password","validationSchema","schema","onSubmit","values","_ref","resetForm","loginThunk","children","_jsxs","Form","className","styles","Input","name","placeholder","type","Button","style","textTransform","PetBlock","mobileImage1x","Dog1M","mobileImage2x","Dog2M","tabletImage1x","Dog1P","tabletImage2x","Dog2P","desktopImage1x","Dog1D","desktopImage2x","Dog2D","LoginReactForma","NavLink","to","LoginForm","_ref$type","onClick","field","form","props","_objectWithoutProperties","_excluded","error","errors","touched","success","_useState","useState","_useState2","_slicedToArray","visible","setVisible","_objectSpread","borderColor","transform","Icon","width","height","color","Field","component","InputField","ErrorMessage","media","srcSet","concat","src","alt","registerSchema","yup","shape","required","matches","min","confirmpassword","oneOf","loginSchema","addPetSchema","title","imgUrl","species","birthday","sex","editUserSchema","phone"],"sourceRoot":""}