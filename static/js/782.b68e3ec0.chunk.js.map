{"version":3,"file":"static/js/782.b68e3ec0.chunk.js","mappings":"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","sources":["components/FormaReact/FormaReactReg.jsx","components/RegisterForm/RegisterForm.jsx","Pages/Register/Register.jsx","webpack://react-homework-template/./src/components/Button/button.module.css?6dda","components/Button/Button.jsx","components/FormaReact/InputField.jsx","components/FormaReact/Input.jsx","webpack://react-homework-template/./src/components/PetBlock/petBlock.module.css?26e0","components/PetBlock/PetBlock.jsx","schemas/schemas.js","webpack://react-homework-template/./src/components/FormaReact/formaReactReg.module.css?c1f4","webpack://react-homework-template/./src/components/RegisterForm/registerForm.module.css?0fd0"],"sourcesContent":["import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { registerThunk } from '../../redux/auth/operationsAuth';\nimport { Formik, Form } from 'formik';\nimport styles from './formaReactReg.module.css';\nimport * as schema from '../../schemas/schemas';\nimport Input from './Input';\nimport Button from 'components/Button/Button';\n\nconst FormaReactReg = () => {\n  const dispatch = useDispatch();\n  return (\n    <Formik\n      initialValues={{\n        name: '',\n        email: '',\n        password: '',\n        confirmpassword: '',\n      }}\n      validationSchema={schema.registerSchema}\n      onSubmit={(values, { resetForm }) => {\n        const { confirmPassword, confirmpassword, ...dataThunk } = values;\n        dispatch(registerThunk(dataThunk));\n\n        resetForm();\n      }}\n    >\n      <Form className={styles.form}>\n        <Input name=\"name\" placeholder=\"Name\" type=\"name\" />\n        <Input name=\"email\" placeholder=\"Email\" type=\"email\" />\n        <Input name=\"password\" placeholder=\"Password\" type=\"password\" />\n        <Input\n          name=\"confirmpassword\"\n          placeholder=\"Confirm password\"\n          type=\"password\"\n        />\n        <div className={styles.btn}>\n          <Button style={{ textTransform: 'uppercase' }}>Registration</Button>\n        </div>\n      </Form>\n    </Formik>\n  );\n};\n\nexport default FormaReactReg;\n","import PetBlock from 'components/PetBlock/PetBlock'\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Cat1M from '../../assets/img/cat1M.png';\nimport Cat1D from '../../assets/img/cat1D.png';\nimport Cat1P from '../../assets/img/cat1P.png';\nimport Cat2D from '../../assets/img/cat2D.png';\nimport Cat2M from '../../assets/img/cat2M.png';\nimport Cat2P from '../../assets/img/cat2P.png';\nimport FormaReactReg from 'components/FormaReact/FormaReactReg';\nimport styles from './registerForm.module.css';\n\nconst RegisterForm = () => {\n  return (\n    <div className={styles.wrap}>\n      <PetBlock\n      mobileImage1x={Cat1M}\n       mobileImage2x={Cat2M}\n       tabletImage1x={Cat1P}\n      tabletImage2x={Cat2P}\n       desktopImage1x={Cat1D}\n        desktopImage2x={Cat2D}\n      />\n      <div className={styles.wrapForma}>\n         <h3 className={styles.title}>Registration</h3>\n         <p className={styles.text}>Thank you for your interest in our platform.</p>\n         <FormaReactReg/>\n         <div className={styles.linkWrap}>\n           <p className={styles.linkText}>Already have an account?</p>\n           <NavLink className={styles.link} to=\"/login\">Login</NavLink>\n\n         </div>\n      </div >\n    </div>\n  )\n}\n\nexport default RegisterForm","import React from 'react'\nimport RegisterForm from 'components/RegisterForm/RegisterForm'\n\nconst Register = () => {\n  return (\n    <div><RegisterForm/></div>\n  )\n}\n\nexport default Register","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"button_btn__HeAxz\"};","import React from 'react';\nimport styles from './button.module.css';\n\n const Button = ({ type = 'submit', children, onClick, style}) => {\n  return (\n    <button className={styles.btn} type={type} onClick={onClick} style={style}> \n      {children}\n    </button>\n  );\n};\nexport default Button","import React, { useState } from 'react';\nimport Icon from 'components/Icon/Icon';\nimport styles from './formaReactReg.module.css';\n\nconst InputField = ({ field, form, ...props }) => {\n  const error = form.errors[field.name] && form.touched[field.name];\n  const success = !form.errors[field.name] && form.touched[field.name];\n  const [visible, setVisible] = useState(false);\n\n  return (\n    <div className={styles.inputWrap}>\n      <label>\n        <input\n          {...field}\n          {...props}\n          type={props.type === 'password' && (visible ? 'text' : 'password')}\n          style={{\n            borderColor: error\n              ? '#ef2447'\n              : success\n              ? '#08aa83'\n              : 'rgba(38, 38, 38, 0.15)',\n          }}\n        />\n        <div\n          className={styles.btnEyeWrap}\n          style={{\n            transform: props.type === 'password' && 'translate(-20%, 50%)',\n          }}\n        >\n          <button className={styles.btnEye}>\n            {error && <Icon width={18} height={18} name={'icon-cross-small'} />}\n            {success && <Icon width={18} height={18} name={'icon-green'} />}\n          </button>\n          {props.type === 'password' && (\n            <button\n              type=\"button\"\n              className={styles.btnEye}\n              onClick={() => {\n                setVisible(!visible);\n              }}\n            >\n              <Icon width={20} height={20} name={'icon-eye-off'} />\n            </button>\n          )}\n        </div>\n        {success && props.placeholder === 'Password' && (\n          <span style={{ color: '#08aa83' }}>Password is secure</span>\n        )}\n      </label>\n    </div>\n  );\n}\n\nexport default InputField;\n","import React from 'react';\nimport { Field, ErrorMessage } from 'formik';\nimport InputField from './InputField'\nimport styles from './formaReactReg.module.css';\n\n\nconst Input = ({ name, placeholder,type}) => {\n  \n  return (\n    <div className={styles.inputWrap}>\n      <label>\n        <Field name={name} placeholder={placeholder} type={type} component={InputField} />\n        <ErrorMessage name={name}>{error => <span>{error}</span>}</ErrorMessage>\n      </label>\n    </div>\n  );\n};\n\nexport default Input;\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapImg\":\"petBlock_wrapImg__iGesq\",\"img\":\"petBlock_img__pTzeP\"};","import React from 'react';\nimport styles from './petBlock.module.css';\n\nconst PetBlock = ({\n  mobileImage1x,\n  mobileImage2x,\n  tabletImage1x,\n  tabletImage2x,\n  desktopImage1x,\n  desktopImage2x,\n}) => {\n  return (\n    <div className={styles.wrapImg}>\n      <picture className={styles.img}>\n        <source\n         media=\"(max-width: 767px)\"\n          srcSet={`${mobileImage1x} 1x, ${mobileImage2x} 2x`}\n        />\n        <source\n           media=\"(min-width: 768px) and (max-width: 1279px)\"\n          srcSet={`${tabletImage1x} 1x, ${tabletImage2x} 2x`}\n        />\n        <source\n          media=\"(min-width: 1280px)\"\n          srcSet={`${desktopImage1x} 1x, ${desktopImage2x} 2x`}\n        />\n        <img src={desktopImage1x} alt=\"pet\" />\n      </picture>\n    </div>\n  );\n};\n\nexport default PetBlock;\n","import * as yup from 'yup';\n\nexport const registerSchema = yup.object().shape({\n  name: yup.string().required('Name is required'),\n\n  email: yup\n    .string()\n    .matches(\n      /^[\\w-]+(\\.[\\w-]+)*@([\\w-]+\\.)+[a-zA-Z]{2,7}$/,\n      'Enter a valid Email'\n    )\n    .required('Email is required'),\n\n  password: yup\n    .string()\n    .min(7, 'Password must be at least 7 characters')\n    .required('Password is required'),\n\n  confirmpassword: yup\n    .string()\n    .oneOf([yup.ref('password'), null], 'Passwords must match')\n    .required('Confirm password is required'),\n});\n\nexport const loginSchema = yup.object().shape({\n  email: yup\n    .string()\n    .matches(\n      /^[\\w-]+(\\.[\\w-]+)*@([\\w-]+\\.)+[a-zA-Z]{2,7}$/,\n      'Enter a valid Email'\n    )\n    .required('Email is required'),\n\n  password: yup\n    .string()\n    .min(7, 'Password must be at least 7 characters')\n    .required('Password is required'),\n});\n\nexport const addPetSchema = yup.object().shape({\n  title: yup\n    .string()\n    .required('Title is required'),\n\n  name: yup\n    .string()\n    .required('Name is required'),\n\n    imgUrl: yup\n    .string()\n    .matches(\n      /^https?:\\/\\/.*\\.(?:png|jpg|jpeg|gif|bmp|webp)$/,\n      'Enter a valid imgUrl'\n    )\n    .required('imgUrl is required'),\n\n    species: yup\n    .object()\n    .required('Species is required'),\n\n    birthday: yup\n    .string()\n    .matches( /^\\d{4}-\\d{2}-\\d{2}$/,'Enter a valid Birthday')\n    .required('Birthday is required'),\n\n    sex: yup\n    .string()\n    .required('Pet gender is required'),\n});\n\nexport const editUserSchema = yup.object().shape({\n  name: yup.string(),\n\n  email: yup\n    .string()\n    .matches(\n      /^[\\w-]+(\\.[\\w-]+)*@([\\w-]+\\.)+[a-zA-Z]{2,7}$/,\n      'Enter a valid Email'),\n\n    imgUrl: yup\n    .string()\n    .matches(\n      /^https?:\\/\\/.*\\.(?:png|jpg|jpeg|gif|bmp|webp)$/,\n      'Enter a valid imgUrl'),\n\n   phone: yup\n    .string()\n    .matches(\n      /^\\+38\\d{10}$/,\n      'Enter a valid Phone')\n});\n\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"formaReactReg_form__UEHkA\",\"inputWrap\":\"formaReactReg_inputWrap__EasdP\",\"btn\":\"formaReactReg_btn__06TDj\",\"btnLog\":\"formaReactReg_btnLog__m8bab\",\"btnEyeWrap\":\"formaReactReg_btnEyeWrap__iGYDH\",\"btnEye\":\"formaReactReg_btnEye__fZiQ1\"};","// extracted by mini-css-extract-plugin\nexport default {\"wrap\":\"registerForm_wrap__HOmjm\",\"wrapForma\":\"registerForm_wrapForma__VG4eS\",\"title\":\"registerForm_title__IlNIl\",\"titleLog\":\"registerForm_titleLog__tMloT\",\"text\":\"registerForm_text__E1GKU\",\"linkWrap\":\"registerForm_linkWrap__gtTsZ\",\"linkWrapLog\":\"registerForm_linkWrapLog__lxRxR\",\"linkText\":\"registerForm_linkText__se5gg\",\"link\":\"registerForm_link__tBPB3\"};"],"names":["dispatch","useDispatch","_jsx","Formik","initialValues","name","email","password","confirmpassword","validationSchema","schema","onSubmit","values","_ref","resetForm","dataThunk","confirmPassword","_objectWithoutProperties","_excluded","registerThunk","children","_jsxs","Form","className","styles","Input","placeholder","type","Button","style","textTransform","PetBlock","mobileImage1x","Cat1M","mobileImage2x","Cat2M","tabletImage1x","Cat1P","tabletImage2x","Cat2P","desktopImage1x","Cat1D","desktopImage2x","Cat2D","FormaReactReg","NavLink","to","RegisterForm","_ref$type","onClick","field","form","props","error","errors","touched","success","_useState","useState","_useState2","_slicedToArray","visible","setVisible","_objectSpread","borderColor","transform","Icon","width","height","color","Field","component","InputField","ErrorMessage","media","srcSet","concat","src","alt","registerSchema","yup","shape","required","matches","min","oneOf","loginSchema","addPetSchema","title","imgUrl","species","birthday","sex","editUserSchema","phone"],"sourceRoot":""}